# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
spec:
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      serviceAccountName: default
      terminationGracePeriodSeconds: 5
      containers:
      - name: front
        image: ghcr.io/opsani/bank-of-anthos/frontend:appd
        imagePullPolicy: Always
        command: ["pyagent", "run", "-c", "/appdynamics/appd.cfg", "--", "gunicorn", "-b", ":8080", "--threads", "4", "--log-config", "/logging.conf", "--log-level=info", "frontend:create_app()"]
        volumeMounts:
        - name: publickey
          mountPath: "/root/.ssh"
          readOnly: true
        - name: appdynamics
          mountPath: /appdynamics
        env:
        - name: VERSION
          value: "v0.4.1"
        - name: PORT
          value: "8080"
        - name: ENABLE_TRACING
          value: "false"
        - name: SCHEME
          value: "http"
         # Valid levels are debug, info, warning, error, critical. If no valid level is set, gunicorn will default to info.
        - name: LOG_LEVEL
          value: "info"
        # Set to "true" to enable the CymbalBank logo + title
        # - name: CYMBAL_LOGO
        #   value: "false"
        # Customize the bank name used in the header. Defaults to 'Bank of Anthos' - when CYMBAL_LOGO is true, uses 'CymbalBank'
        # - name: BANK_NAME
        #   value: ""
        - name: DEFAULT_USERNAME
          valueFrom:
            configMapKeyRef:
              name: demo-data-config
              key: DEMO_LOGIN_USERNAME
        - name: DEFAULT_PASSWORD
          valueFrom:
            configMapKeyRef:
              name: demo-data-config
              key: DEMO_LOGIN_PASSWORD
        envFrom:
        - configMapRef:
            name: environment-config
        - configMapRef:
            name: service-api-config
        - configMapRef:
            name: appd-config
        readinessProbe:
          httpGet:
            path: /ready
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 10
        resources:
          requests:
            cpu: 1000m
            memory: 1Gi
          limits:
            cpu: 1000m
            memory: 1Gi
      volumes:
      - name: publickey
        secret:
          secretName: jwt-key
          items:
          - key: jwtRS256.key.pub
            path: publickey
      - name: appd-scripts
        configMap:
          name: appd-pyagent
      - name: appdynamics
      initContainers:
        - image: busybox:latest
          name: appd-pyagent
          env:
            - name: APPDYNAMICS_AGENT_NODE_NAME
              value: frontend
            - name: APPDYNAMICS_AGENT_ACCOUNT_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  key: accesskey
                  name: appd-secrets
            - name: APPDYNAMICS_AGENT_ACCOUNT_NAME
              valueFrom:
                secretKeyRef:
                  key: accountname
                  name: appd-secrets
            - name: APPDYNAMICS_CONTROLLER_HOST_NAME
              valueFrom:
                secretKeyRef:
                  key: hostname
                  name: appd-secrets
          envFrom:
            - configMapRef:
                name: appd-config
          command: ["/bin/sh", "/scripts/pyagent.sh"]
          volumeMounts:
            - mountPath: /scripts/pyagent.sh
              name: appd-scripts
              subPath: pyagent.sh
              readOnly: true
            - mountPath: /appdynamics
              name: appdynamics
---
apiVersion: v1
kind: Service
metadata:
  name: frontend
spec:
  type: ClusterIP
  selector:
    app: frontend
  ports:
  - name: http
    port: 80
    targetPort: 8080
